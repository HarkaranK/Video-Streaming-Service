apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-scripts
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS video;
    USE video;

    CREATE TABLE IF NOT EXISTS Video (
        id INT AUTO_INCREMENT PRIMARY KEY,
        title VARCHAR(100),
        path VARCHAR(200)
    );

    DROP USER IF EXISTS 'vid'@'%';
    CREATE USER 'vid'@'%' IDENTIFIED BY 'vid';
    GRANT ALL PRIVILEGES ON video.* TO 'vid'@'%';
    FLUSH PRIVILEGES;
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: video-streaming-service-mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-service
      service: mysql
  template:
    metadata:
      labels:
        app: mysql-service
        service: mysql
    spec:
      containers:
        - name: mysql
          image: harkarank/project2:mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: vid
            - name: MYSQL_DATABASE
              value: video
            - name: MYSQL_USER
              value: vid
            - name: MYSQL_PASSWORD
              value: vid
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d/init.sql
              subPath: init.sql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-persistent-storage
        - name: init-script
          configMap:
            name: mysql-init-scripts
